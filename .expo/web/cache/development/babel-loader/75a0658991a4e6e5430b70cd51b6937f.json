{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text } from 'react-native-paper';\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AmReg = function AmReg(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      address = _useState12[0],\n      setAddress = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      image = _useState14[0],\n      setImage = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      modalVisible = _useState16[0],\n      setModalVisible = _useState16[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var emptyError = emptyfield(empty.value);\n    var phoneError = emptyfield(phone.value);\n    var addressError = emptyfield(address.value);\n\n    if (emailError || passwordError || nameError || emptyError || phoneError || addressError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      setEmpty(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, empty), {}, {\n        error: phoneError\n      }));\n      setAddress(_objectSpread(_objectSpread({}, empty), {}, {\n        error: addressError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  var pickfromGallery = function pickfromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickfromCamera = function pickfromCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(ScrollView, {\n      style: styles.head,\n      children: _jsxs(View, {\n        style: styles.headcon,\n        children: [_jsx(Header, {\n          children: \"Create Account\"\n        }), _jsx(TextInput, {\n          label: \"Manager Name\",\n          returnKeyType: \"next\",\n          value: name.value,\n          onChangeText: function onChangeText(text) {\n            return setName({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!name.error,\n          errorText: name.error\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Phone No\",\n          returnKeyType: \"next\",\n          value: phone.value,\n          onChangeText: function onChangeText(text) {\n            return setPhone({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!phone.error,\n          errorText: phone.error\n        }), _jsx(TextInput, {\n          label: \"Ambulance Features\",\n          returnKeyType: \"next\",\n          value: empty.value,\n          onChangeText: function onChangeText(text) {\n            return setEmpty({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!empty.error,\n          errorText: empty.error\n        }), _jsx(TextInput, {\n          label: \"Address\",\n          returnKeyType: \"next\",\n          value: address.value,\n          onChangeText: function onChangeText(text) {\n            return setAddress({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!address.error,\n          errorText: address.error\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(Dropdown, {}), _jsx(Button, {\n          mode: \"outlined\",\n          icon: 'upload',\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          labelStyle: {\n            color: '#3d3c3a'\n          },\n          style: {\n            marginTop: 6,\n            padding: 4,\n            width: '100%',\n            borderWidth: 1\n          },\n          children: \"Upload Image\"\n        }), _jsx(Image, {\n          style: styles.imagearea,\n          source: {\n            uri: image\n          }\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.modalview,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              icon: \"camera\",\n              onPress: pickfromCamera,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Camera\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              icon: \"image-area\",\n              onPress: pickfromGallery,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Gallery\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Cancel\"\n            })]\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: _onSignUpPressed,\n          style: {\n            marginTop: 6\n          },\n          children: \"Sign Up\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Already have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.goBack('LoginScreen');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: '80%',\n    height: '100%'\n  },\n  headcon: {\n    alignItems: 'center'\n  },\n  container: {\n    width: '100%',\n    height: '100%',\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  modalview: {\n    position: 'absolute',\n    bottom: 2,\n    width: '100%',\n    backgroundColor: '#e9f0ef'\n  }\n});\nexport default AmReg;","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/Registration/AmReg.js"],"names":["React","useState","Text","Logo","Header","Button","TextInput","Dropdown","theme","emailValidator","passwordValidator","nameValidator","emptyfield","ImagePicker","AmReg","navigation","value","error","name","setName","email","setEmail","password","setPassword","empty","setEmpty","phone","setPhone","address","setAddress","image","setImage","modalVisible","setModalVisible","_onSignUpPressed","nameError","emailError","passwordError","emptyError","phoneError","addressError","navigate","pickfromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","cropping","width","height","quality","result","console","log","cancelled","uri","pickfromCamera","launchCameraAsync","styles","container","head","headcon","text","color","marginTop","padding","borderWidth","imagearea","Alert","alert","modalview","alignSelf","row","goBack","link","StyleSheet","create","flex","alignItems","flexDirection","marginBottom","fontWeight","colors","primary","position","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {ScrollView, View, StyleSheet, TouchableOpacity,Alert, Modal, Image, StatusBar} from 'react-native';\r\nimport { Text } from 'react-native-paper';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\n//import Dropdown from '../components/DropdownR';\r\nimport Dropdown from '../components/Dropdown';\r\nimport { theme } from '../core/theme';\r\nimport { emailValidator } from '../helpers/emailValidator';\r\nimport { passwordValidator } from '../helpers/passwordValidator';\r\nimport { nameValidator } from '../helpers/nameValidator';\r\nimport {emptyfield } from '../helpers/emptyfield';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import Firebase from \"../firebase\";\r\n// const auth = Firebase.auth();\r\n\r\nconst AmReg = ( {navigation}) => {\r\n  const [name, setName] = useState({ value: '', error: '' });\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n  const [empty, setEmpty] = useState({ value: '', error: '' });\r\n  const [phone, setPhone] = useState({ value: '', error: '' });\r\n  const [address, setAddress] = useState({ value: '', error: '' });\r\n  const [image, setImage] = useState();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  \r\n  const _onSignUpPressed = () => {\r\n    const nameError = nameValidator(name.value);\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n    const emptyError = emptyfield(empty.value);\r\n    const phoneError = emptyfield(phone.value); \r\n    const addressError = emptyfield(address.value);   \r\n\r\n\r\n    if (emailError || passwordError || nameError || emptyError ||phoneError||addressError) {\r\n      setName({ ...name, error: nameError });\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      setEmpty({ ...empty, error: emptyError });\r\n      setPhone({ ...empty, error: phoneError });\r\n      setAddress({ ...empty, error: addressError });\r\n      return;\r\n    }\r\n\r\n    navigation.navigate('LoginScreen');\r\n  };\r\n\r\n  // const _onSignUpPressed = () => {\r\n  //  try {\r\n  //     if (email.value !== '' && password.value !== '') {\r\n  //         auth.createUserWithEmailAndPassword(email.value, password.value); \r\n  //         navigation.replace('LoginScreen', {otherParam: String})\r\n  //     }\r\n  //   } catch (error) {\r\n  //       alert(error.message)\r\n  //   }\r\n  // };\r\n\r\n  const pickfromGallery = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      cropping: true,\r\n      width:300, \r\n      height:300,\r\n      //aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  }\r\n  const pickfromCamera = async () => {\r\n    let result = await ImagePicker.launchCameraAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      cropping: true,\r\n      width:300, \r\n      height:300,\r\n      //aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style= {styles.container}>\r\n      <StatusBar backgroundColor=\"skyblue\" translucent={true}/>\r\n      {/* <Logo /> */}\r\n      <ScrollView style= {styles.head}>\r\n      <View style= {styles.headcon}>\r\n      <Header>Create Account</Header>\r\n\r\n      <TextInput\r\n        label=\"Manager Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={text => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      />\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={text => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Phone No\"\r\n        returnKeyType=\"next\"\r\n        value={phone.value}\r\n        onChangeText={text => setPhone({ value: text, error: '' })}\r\n        error={!!phone.error}\r\n        errorText={phone.error}\r\n      />\r\n      <TextInput\r\n        label=\"Ambulance Features\"\r\n        returnKeyType=\"next\"\r\n        value={empty.value}\r\n        onChangeText={text => setEmpty({ value: text, error: '' })}\r\n        error={!!empty.error}\r\n        errorText={empty.error}\r\n      />\r\n      <TextInput\r\n        label=\"Address\"\r\n        returnKeyType=\"next\"\r\n        value={address.value}\r\n        onChangeText={text => setAddress({ value: text, error: '' })}\r\n        error={!!address.error}\r\n        errorText={address.error}\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={text => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Dropdown/>\r\n      <Button\r\n        mode=\"outlined\"\r\n        icon = {'upload'} \r\n        onPress = {() =>setModalVisible(true)}\r\n        labelStyle={{color: '#3d3c3a'}}\r\n        style={{marginTop: 6, padding:4, width:'100%',borderWidth: 1}}>\r\n        Upload Image\r\n      </Button>\r\n      <Image style = {styles.imagearea} source ={{uri:image}}></Image>\r\n      <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible(!modalVisible);\r\n          }}\r\n        >\r\n          <View style = {styles.modalview}>\r\n          <Button\r\n            mode=\"contained\"\r\n            icon = 'camera'\r\n            onPress = {pickfromCamera}\r\n            style={{marginTop: 10, alignSelf: 'center', }}>\r\n            Camera\r\n          </Button>\r\n          <Button\r\n            mode=\"contained\"\r\n            icon = 'image-area'\r\n            onPress = {pickfromGallery}\r\n            style={{marginTop: 10, alignSelf: 'center' }}>\r\n            Gallery\r\n          </Button>\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress = {()=> setModalVisible(!modalVisible)}\r\n            style={{marginTop: 10, alignSelf: 'center' }}>\r\n            Cancel\r\n          </Button>\r\n          </View>\r\n        \r\n        </Modal>\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={_onSignUpPressed}\r\n        style={{ marginTop: 6 }}>\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.goBack('LoginScreen')}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  head: {\r\n    flex: 1,\r\n    width: '80%',\r\n    height: '100%',\r\n  },\r\n  headcon: {\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignSelf:'center',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n  modalview: {\r\n    position: 'absolute',\r\n    bottom:2,\r\n    width:'100%',\r\n    backgroundColor: '#e9f0ef'\r\n  },\r\n});\r\n\r\nexport default AmReg;"]},"metadata":{},"sourceType":"module"}