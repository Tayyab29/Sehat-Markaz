{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport TextInput from \"./components/TextInput\";\nimport Button from \"./components/Button\";\nimport { emailValidator } from \"./helpers/emailValidator\";\nexport default function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var sendResetPasswordEmail = function sendResetPasswordEmail() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return React.createElement(Background, null, React.createElement(Logo, null), React.createElement(Header, null, \"Restore Password\"), React.createElement(TextInput, {\n    label: \"E-mail address\",\n    returnKeyType: \"done\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    description: \"You will receive email with password reset link.\"\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: sendResetPasswordEmail,\n    style: {\n      marginTop: 16\n    }\n  }, \"Send email\"));\n}","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat-k/src/screens/ResetPasswordScreen.js"],"names":["React","useState","Background","Logo","Header","TextInput","Button","emailValidator","ResetPasswordScreen","navigation","value","error","email","setEmail","sendResetPasswordEmail","emailError","navigate","text","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT;AAEA,eAAe,SAASC,mBAAT,OAA6C;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1D,kBAA0BR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAMC,UAAU,GAAGR,cAAc,CAACK,KAAK,CAACF,KAAP,CAAjC;;AACA,QAAIK,UAAJ,EAAgB;AACdF,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,KAAK,EAAEI;AAApB,SAAR;AACA;AACD;;AACDN,IAAAA,UAAU,CAACO,QAAX,CAAoB,aAApB;AACD,GAPD;;AASA,SACE,oBAAC,UAAD,QACE,oBAAC,IAAD,OADF,EAEE,oBAAC,MAAD,2BAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEJ,KAAK,CAACF,KAHf;AAIE,IAAA,YAAY,EAAE,sBAACO,IAAD;AAAA,aAAUJ,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAEO,IAAT;AAAeN,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;AAME,IAAA,SAAS,EAAEC,KAAK,CAACD,KANnB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAQE,IAAA,gBAAgB,EAAC,OARnB;AASE,IAAA,eAAe,EAAC,cATlB;AAUE,IAAA,YAAY,EAAC,eAVf;AAWE,IAAA,WAAW,EAAC;AAXd,IAHF,EAgBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAEG,sBAFX;AAGE,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE;AAAb;AAHT,kBAhBF,CADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport Background from './components/Background';\nimport Logo from './components/Logo';\nimport Header from './components/Header';\nimport TextInput from './components/TextInput';\nimport Button from './components/Button';\nimport { emailValidator } from './helpers/emailValidator';\n\nexport default function ResetPasswordScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' });\n\n  const sendResetPasswordEmail = () => {\n    const emailError = emailValidator(email.value);\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n    navigation.navigate('LoginScreen');\n  };\n\n  return (\n    <Background>\n      <Logo />\n      <Header>Restore Password</Header>\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        description=\"You will receive email with password reset link.\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={sendResetPasswordEmail}\n        style={{ marginTop: 16 }}>\n        Send email\n      </Button>\n    </Background>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}