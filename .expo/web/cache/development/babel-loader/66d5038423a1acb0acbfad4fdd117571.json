{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Data from \"./pharmaciesDummyData\";\nimport axios from \"axios\";\nimport url from \"../../../url.json\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function FoundNearbyPharmacies(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  useEffect(function () {\n    var apiCall = function apiCall() {\n      var res;\n      return _regeneratorRuntime.async(function apiCall$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"a\");\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url.url + \"api/pharmacy/\"));\n\n            case 4:\n              res = _context.sent;\n              setData(res.data);\n              console.log(data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    };\n\n    apiCall();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.head,\n      children: _jsxs(Text, {\n        style: styles.txt,\n        children: [\"Registered pharmacies in \", route.params.add]\n      })\n    }), _jsx(FlatList, {\n      data: Data,\n      style: {\n        width: \"90%\"\n      },\n      renderItem: function renderItem(itemData) {\n        if (itemData.item.address.toUpperCase() === route.params.add.toUpperCase()) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"PharmacyDetails\", {\n                pharm: itemData.item\n              });\n            },\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: styles.btnTxt,\n              children: itemData.item.name\n            })\n          });\n        }\n      },\n      keyExtractor: function keyExtractor(itemData, index) {\n        return itemData._id;\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: \"20%\",\n    alignItems: \"center\",\n    width: \"100%\",\n    flex: 1\n  },\n  head: {\n    backgroundColor: \"#f6f6f6\",\n    elevation: 10,\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: \"90%\"\n  },\n  txt: {\n    margin: 20,\n    fontSize: 18,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  btn: {\n    padding: 25,\n    backgroundColor: \"darkgray\",\n    elevation: 2,\n    marginVertical: 10,\n    borderRadius: 15,\n    marginTop: 5\n  },\n  btnTxt: {\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/Pharmacy/foundNearbyPharmacies.js"],"names":["React","useState","useEffect","Data","axios","url","FoundNearbyPharmacies","navigation","route","data","setData","address","setAddress","apiCall","console","log","get","res","styles","container","head","txt","params","add","width","itemData","item","toUpperCase","navigate","pharm","btn","btnTxt","name","index","_id","StyleSheet","create","marginTop","alignItems","flex","backgroundColor","elevation","borderRadius","marginBottom","margin","fontSize","color","fontWeight","padding","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Data from \"./pharmaciesDummyData\";\r\nimport axios from \"axios\";\r\nimport url from \"../../../url.json\";\r\n\r\nexport default function FoundNearbyPharmacies({ navigation, route }) {\r\n  const [data, setData] = useState([]);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      console.log(\"a\");\r\n      try {\r\n        const res = await axios.get(`${url.url}api/pharmacy/`);\r\n        setData(res.data);\r\n        console.log(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    apiCall();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.head}>\r\n        <Text style={styles.txt}>\r\n          Registered pharmacies in {route.params.add}\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={Data}\r\n        style={{ width: \"90%\" }}\r\n        renderItem={(itemData) => {\r\n          if (\r\n            itemData.item.address.toUpperCase() ===\r\n            route.params.add.toUpperCase()\r\n          ) {\r\n            return (\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  navigation.navigate(\"PharmacyDetails\", {\r\n                    pharm: itemData.item,\r\n                  })\r\n                }\r\n                style={styles.btn}\r\n              >\r\n                <Text style={styles.btnTxt}>{itemData.item.name}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          }\r\n        }}\r\n        keyExtractor={(itemData, index) => itemData._id}\r\n      ></FlatList>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: \"20%\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    flex: 1,\r\n  },\r\n  head: {\r\n    backgroundColor: \"#f6f6f6\",\r\n    elevation: 10,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    width: \"90%\",\r\n  },\r\n  txt: {\r\n    margin: 20,\r\n    fontSize: 18,\r\n    color: \"#000\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  btn: {\r\n    padding: 25,\r\n    backgroundColor: \"darkgray\",\r\n    elevation: 2,\r\n    marginVertical: 10,\r\n    borderRadius: 15,\r\n    marginTop: 5,\r\n  },\r\n  btnTxt: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}