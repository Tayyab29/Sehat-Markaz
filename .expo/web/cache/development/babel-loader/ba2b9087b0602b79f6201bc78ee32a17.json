{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { Avatar } from \"react-native-paper\";\nimport Data from \"./DonorsData\";\nimport kami from \"../asset/kami.jpeg\";\nimport axios from \"axios\";\nimport url from \"../../../url.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BloodDonors(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bloodGroup = _useState4[0],\n      setBloodGroup = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  useEffect(function () {\n    var apiCall = function apiCall() {\n      var res;\n      return _regeneratorRuntime.async(function apiCall$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"a\");\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url.url + \"api/blooddonor/\"));\n\n            case 4:\n              res = _context.sent;\n              console.log(\"b\");\n              setData(res.data);\n              console.log(res.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    };\n\n    apiCall();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginVertical: 10,\n          width: \"90%\"\n        },\n        children: [_jsxs(View, {\n          style: styles.input,\n          children: [_jsx(TextInput, {\n            placeholder: \"City\",\n            value: city,\n            name: \"city\",\n            onChangeText: function onChangeText(city) {\n              return setCity(city);\n            },\n            style: {\n              width: \"58%\"\n            }\n          }), _jsx(AntDesign, {\n            name: \"search1\",\n            size: 16,\n            color: \"gray\"\n          })]\n        }), _jsx(View, {\n          style: styles.picker,\n          children: _jsxs(Picker, {\n            mode: \"dropdown\",\n            selectedValue: bloodGroup,\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              return setBloodGroup(itemValue);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"A+\",\n              value: \"A+\"\n            }), _jsx(Picker.Item, {\n              label: \"A-\",\n              value: \"A-\"\n            }), _jsx(Picker.Item, {\n              label: \"B+\",\n              value: \"B+\"\n            }), _jsx(Picker.Item, {\n              label: \"B-\",\n              value: \"B-\"\n            }), _jsx(Picker.Item, {\n              label: \"AB+\",\n              value: \"AB+\"\n            }), _jsx(Picker.Item, {\n              label: \"AB-\",\n              value: \"AB-\"\n            }), _jsx(Picker.Item, {\n              label: \"O+\",\n              value: \"O+\"\n            }), _jsx(Picker.Item, {\n              label: \"O-\",\n              value: \"OO-\"\n            })]\n          })\n        })]\n      })\n    }), _jsx(FlatList, {\n      data: Data,\n      renderItem: function renderItem(itemData) {\n        if (city === \"\" && bloodGroup === \"\") {\n          return _jsx(Btn, {\n            item: itemData\n          });\n        }\n\n        if (itemData.item.bloodGroup === bloodGroup && city === \"\") {\n          return _jsx(Btn, {\n            item: itemData\n          });\n        }\n\n        if (itemData.item.city === city && itemData.item.bloodGroup === bloodGroup) {\n          return _jsx(Btn, {\n            item: itemData\n          });\n        }\n      }\n    })]\n  });\n}\n\nvar Btn = function Btn(props) {\n  var navigation = useNavigation();\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"DonorDetails\", {\n        donor: props.item.item\n      });\n    },\n    style: {\n      alignItems: \"center\"\n    },\n    children: _jsxs(View, {\n      style: styles.list,\n      children: [_jsx(Avatar.Image, {\n        source: kami,\n        style: styles.avatar,\n        size: 100\n      }), _jsxs(View, {\n        style: styles.details,\n        children: [_jsx(Text, {\n          style: styles.name,\n          children: props.item.item.name\n        }), _jsxs(Text, {\n          style: styles.city,\n          children: [\"Blood Group: \", props.item.item.bloodGroup]\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 5,\n    flex: 1\n  },\n  img: {\n    alignItems: \"center\",\n    marginTop: \"12%\",\n    width: 70,\n    height: 100\n  },\n  input: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 10,\n    borderWidth: 1,\n    alignItems: \"flex-start\",\n    height: 40,\n    padding: 12,\n    marginEnd: 5\n  },\n  picker: {\n    borderWidth: 1,\n    borderRadius: 10,\n    justifyContent: 'center',\n    marginLeft: 2,\n    width: \"30%\",\n    height: 40\n  },\n  list: {\n    flexDirection: \"row\",\n    width: \"90%\",\n    marginHorizontal: 5,\n    marginVertical: 8,\n    borderRadius: 10,\n    elevation: 5,\n    padding: 7,\n    backgroundColor: \"white\"\n  },\n  details: {\n    margin: 12\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#26241e\"\n  },\n  city: {\n    fontSize: 14,\n    color: \"#26241e\"\n  },\n  avatar: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/Blood/bloodDonors.js"],"names":["React","useState","useEffect","useNavigation","AntDesign","Picker","Avatar","Data","kami","axios","url","BloodDonors","navigation","city","setCity","bloodGroup","setBloodGroup","data","setData","apiCall","console","log","get","res","styles","container","alignItems","flexDirection","marginVertical","width","input","picker","itemValue","itemIndex","itemData","item","Btn","props","navigate","donor","list","avatar","details","name","StyleSheet","create","marginTop","flex","img","height","justifyContent","borderRadius","borderWidth","padding","marginEnd","marginLeft","marginHorizontal","elevation","backgroundColor","margin","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import blooddonation from \"../asset/blooddonation.png\";\r\n// import notfound from \"../asset/notfound.jpg\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  Image,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { Avatar } from \"react-native-paper\";\r\nimport Data from \"./DonorsData\";\r\nimport kami from \"../asset/kami.jpeg\";\r\nimport axios from \"axios\";\r\nimport url from \"../../../url.json\";\r\n\r\nexport default function BloodDonors({ navigation }) {\r\n  const [city, setCity] = useState(\"\");\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () => {\r\n      console.log(\"a\");\r\n      try {\r\n        const res = await axios.get(`${url.url}api/blooddonor/`);\r\n        console.log(\"b\");\r\n        setData(res.data);\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    apiCall();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* <Image source={blooddonation} style={styles.img} /> */}\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            marginVertical: 10,\r\n            width: \"90%\",\r\n          }}\r\n        >\r\n          <View style={styles.input}>\r\n            <TextInput\r\n              placeholder=\"City\"\r\n              value={city}\r\n              name=\"city\"\r\n              onChangeText={(city) => setCity(city)}\r\n              style={{ width: \"58%\" }}\r\n            ></TextInput>\r\n            <AntDesign name=\"search1\" size={16} color=\"gray\" />\r\n          </View>\r\n\r\n          <View style={styles.picker}>\r\n            <Picker\r\n              mode=\"dropdown\"\r\n              selectedValue={bloodGroup}\r\n              onValueChange={(itemValue, itemIndex) => setBloodGroup(itemValue)}\r\n            >\r\n              <Picker.Item label=\"A+\" value=\"A+\" />\r\n              <Picker.Item label=\"A-\" value=\"A-\" />\r\n              <Picker.Item label=\"B+\" value=\"B+\" />\r\n              <Picker.Item label=\"B-\" value=\"B-\" />\r\n              <Picker.Item label=\"AB+\" value=\"AB+\" />\r\n              <Picker.Item label=\"AB-\" value=\"AB-\" />\r\n              <Picker.Item label=\"O+\" value=\"O+\" />\r\n              <Picker.Item label=\"O-\" value=\"OO-\" />\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={Data}\r\n        renderItem={(itemData) => {\r\n          if (city === \"\" && bloodGroup === \"\") {\r\n            return <Btn item={itemData}></Btn>;\r\n          }\r\n          if (itemData.item.bloodGroup === bloodGroup && city === \"\") {\r\n            return <Btn item={itemData}></Btn>;\r\n          }\r\n          if (\r\n            itemData.item.city === city &&\r\n            itemData.item.bloodGroup === bloodGroup\r\n          ) {\r\n            return <Btn item={itemData} />;\r\n          }\r\n        }}\r\n      ></FlatList>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Btn = (props) => {\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() =>\r\n        navigation.navigate(\"DonorDetails\", { donor: props.item.item })\r\n      }\r\n      style={{ alignItems: \"center\" }}\r\n    >\r\n      <View style={styles.list}>\r\n        <Avatar.Image source={kami} style={styles.avatar} size= {100}/>\r\n        <View style={styles.details}>\r\n          <Text style={styles.name}>{props.item.item.name}</Text>\r\n          <Text style={styles.city}>\r\n            Blood Group: {props.item.item.bloodGroup}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 5,\r\n    flex: 1,\r\n  },\r\n  img: {\r\n    alignItems: \"center\",\r\n    marginTop: \"12%\",\r\n    width: 70,\r\n    height: 100,\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    //width: \"65%\",\r\n    alignItems: \"flex-start\",\r\n    height: 40,\r\n    padding: 12,\r\n    marginEnd: 5,\r\n  },\r\n  picker: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    marginLeft: 2,\r\n    width: \"30%\",\r\n    height: 40\r\n  },\r\n  list: {\r\n    //flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    marginHorizontal: 5,\r\n    marginVertical: 8,\r\n    borderRadius: 10,\r\n    //borderWidth: 0.5,\r\n    elevation: 5,\r\n    padding: 7,\r\n    backgroundColor: \"white\",\r\n  },\r\n  details: {\r\n    margin: 12,\r\n  },\r\n  name: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#26241e\",\r\n  },\r\n  city: {\r\n    fontSize: 14,\r\n    color: \"#26241e\",\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}