{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport TextInput from \"./components/TextInput\";\nimport Button from \"./components/Button\";\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var sendResetPasswordEmail = function sendResetPasswordEmail() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Restore Password\"\n    }), _jsx(TextInput, {\n      label: \"E-mail address\",\n      returnKeyType: \"done\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      description: \"You will receive email with password reset link.\"\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: sendResetPasswordEmail,\n      style: {\n        marginTop: 16\n      },\n      children: \"Send email\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '85%',\n    alignSelf: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/ResetPasswordScreen.js"],"names":["React","useState","Logo","Header","TextInput","Button","emailValidator","ResetPasswordScreen","navigation","value","error","email","setEmail","sendResetPasswordEmail","emailError","navigate","styles","container","text","marginTop","StyleSheet","create","flex","width","alignSelf","alignItems"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT;;;AAEA,eAAe,SAASC,mBAAT,OAA6C;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1D,kBAA0BP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAMC,UAAU,GAAGR,cAAc,CAACK,KAAK,CAACF,KAAP,CAAjC;;AACA,QAAIK,UAAJ,EAAgB;AACdF,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,KAAK,EAAEI;AAApB,SAAR;AACA;AACD;;AACDN,IAAAA,UAAU,CAACO,QAAX,CAAoB,aAApB;AACD,GAPD;;AASA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,eAAe,EAAC,SAA3B;AAAqC,MAAA,WAAW,EAAE;AAAlD,MADF,EAEE,KAAC,IAAD,KAFF,EAGE,KAAC,MAAD;AAAA;AAAA,MAHF,EAIE,KAAC,SAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,KAAK,EAAEN,KAAK,CAACF,KAHf;AAIE,MAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,eAAUN,QAAQ,CAAC;AAAEH,UAAAA,KAAK,EAAES,IAAT;AAAeR,UAAAA,KAAK,EAAE;AAAtB,SAAD,CAAlB;AAAA,OAJhB;AAKE,MAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;AAME,MAAA,SAAS,EAAEC,KAAK,CAACD,KANnB;AAOE,MAAA,cAAc,EAAC,MAPjB;AAQE,MAAA,gBAAgB,EAAC,OARnB;AASE,MAAA,eAAe,EAAC,cATlB;AAUE,MAAA,YAAY,EAAC,eAVf;AAWE,MAAA,WAAW,EAAC;AAXd,MAJF,EAiBE,KAAC,MAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,OAAO,EAAEG,sBAFX;AAGE,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAHT;AAAA;AAAA,MAjBF;AAAA,IADF;AA0BD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,KAFE;AAGTC,IAAAA,SAAS,EAAC,QAHD;AAITC,IAAAA,UAAU,EAAE;AAJH;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, StatusBar } from 'react-native';\nimport Logo from './components/Logo';\nimport Header from './components/Header';\nimport TextInput from './components/TextInput';\nimport Button from './components/Button';\nimport { emailValidator } from './helpers/emailValidator';\n\nexport default function ResetPasswordScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' });\n\n  const sendResetPasswordEmail = () => {\n    const emailError = emailValidator(email.value);\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n    navigation.navigate('LoginScreen');\n  };\n\n  return (\n    <View style= {styles.container}>\n      <StatusBar backgroundColor=\"skyblue\" translucent={true}/>\n      <Logo />\n      <Header>Restore Password</Header>\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        description=\"You will receive email with password reset link.\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={sendResetPasswordEmail}\n        style={{ marginTop: 16 }}>\n        Send email\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '85%',\n    alignSelf:'center',\n    alignItems: 'center',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}