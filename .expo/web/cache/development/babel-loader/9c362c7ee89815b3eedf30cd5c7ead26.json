{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\n\nvar DocReg = function DocReg(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      spec = _useState12[0],\n      setSpec = _useState12[1];\n\n  var _useState13 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      exp = _useState14[0],\n      setExp = _useState14[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var emptyError = emptyfield(empty.value);\n    var phoneError = emptyfield(phone.value);\n    var specError = emptyfield(spec.value);\n    var expError = emptyfield(exp.value);\n\n    if (emailError || passwordError || nameError || emptyError || phoneError || specError || expError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      setEmpty(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, empty), {}, {\n        error: phoneError\n      }));\n      setSpec(_objectSpread(_objectSpread({}, empty), {}, {\n        error: specError\n      }));\n      setExp(_objectSpread(_objectSpread({}, empty), {}, {\n        error: expError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return React.createElement(ScrollView, null, React.createElement(Background, null, React.createElement(Logo, null), React.createElement(Header, null, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\"\n  }), React.createElement(TextInput, {\n    label: \"Phone No\",\n    returnKeyType: \"next\",\n    value: phone.value,\n    onChangeText: function onChangeText(text) {\n      return setPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!phone.error,\n    errorText: phone.error\n  }), React.createElement(TextInput, {\n    label: \"PMC No\",\n    returnKeyType: \"next\",\n    value: empty.value,\n    onChangeText: function onChangeText(text) {\n      return setEmpty({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!empty.error,\n    errorText: empty.error\n  }), React.createElement(TextInput, {\n    label: \"Specialty\",\n    returnKeyType: \"next\",\n    value: spec.value,\n    onChangeText: function onChangeText(text) {\n      return setSpec({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!spec.error,\n    errorText: spec.error\n  }), React.createElement(TextInput, {\n    label: \"Experience\",\n    returnKeyType: \"next\",\n    value: exp.value,\n    onChangeText: function onChangeText(text) {\n      return setExp({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!exp.error,\n    errorText: exp.error\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true\n  }), React.createElement(Dropdown, null), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onSignUpPressed,\n    style: {\n      marginTop: 6\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, null, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack('LoginScreen');\n    }\n  }, React.createElement(Text, {\n    style: styles.link\n  }, \"Login\")))));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default DocReg;","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat-k/src/screens/Registration/DocReg.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","Dropdown","theme","emailValidator","passwordValidator","nameValidator","emptyfield","DocReg","navigation","value","error","name","setName","email","setEmail","password","setPassword","empty","setEmpty","phone","setPhone","spec","setSpec","exp","setExp","_onSignUpPressed","nameError","emailError","passwordError","emptyError","phoneError","specError","expError","navigate","text","marginTop","styles","row","goBack","link","StyleSheet","create","flexDirection","marginBottom","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Text } from 'react-native-paper';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport Dropdown from '../components/Dropdown';\r\nimport { theme } from '../core/theme';\r\nimport { emailValidator } from '../helpers/emailValidator';\r\nimport { passwordValidator } from '../helpers/passwordValidator';\r\nimport { nameValidator } from '../helpers/nameValidator';\r\nimport {emptyfield } from '../helpers/emptyfield';\r\n// import Firebase from \"../firebase\";\r\n// const auth = Firebase.auth();\r\n\r\nconst DocReg = ( {navigation}) => {\r\n const [name, setName] = useState({ value: '', error: '' });\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n  const [empty, setEmpty] = useState({ value: '', error: '' });\r\n  const [phone, setPhone] = useState({ value: '', error: '' });\r\n  const [spec, setSpec] = useState({ value: '', error: '' });\r\n  const [exp, setExp] = useState({ value: '', error: '' });\r\n\r\n  const _onSignUpPressed = () => {\r\n    const nameError = nameValidator(name.value);\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n    const emptyError = emptyfield(empty.value);\r\n    const phoneError = emptyfield(phone.value); \r\n    const specError = emptyfield(spec.value);\r\n    const expError = emptyfield(exp.value);\r\n\r\n    if (emailError || passwordError || nameError || emptyError||phoneError||specError||expError) {\r\n      setName({ ...name, error: nameError });\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      setEmpty({ ...empty, error: emptyError });\r\n      setPhone({ ...empty, error: phoneError });\r\n      setSpec({ ...empty, error: specError });\r\n      setExp({ ...empty, error: expError });\r\n      return;\r\n    }\r\n\r\n    navigation.navigate('LoginScreen');\r\n  };\r\n\r\n  // const _onSignUpPressed = () => {\r\n  //  try {\r\n  //     if (email.value !== '' && password.value !== '') {\r\n  //         auth.createUserWithEmailAndPassword(email.value, password.value); \r\n  //         navigation.replace('LoginScreen', {otherParam: String})\r\n  //     }\r\n  //   } catch (error) {\r\n  //       alert(error.message)\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <ScrollView>\r\n    <Background>\r\n      <Logo />\r\n\r\n      <Header>Create Account</Header>\r\n\r\n      <TextInput\r\n        label=\"Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={text => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      />\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={text => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Phone No\"\r\n        returnKeyType=\"next\"\r\n        value={phone.value}\r\n        onChangeText={text => setPhone({ value: text, error: '' })}\r\n        error={!!phone.error}\r\n        errorText={phone.error}\r\n      />\r\n      <TextInput\r\n        label=\"PMC No\"\r\n        returnKeyType=\"next\"\r\n        value={empty.value}\r\n        onChangeText={text => setEmpty({ value: text, error: '' })}\r\n        error={!!empty.error}\r\n        errorText={empty.error}\r\n      />\r\n      <TextInput\r\n        label=\"Specialty\"\r\n        returnKeyType=\"next\"\r\n        value={spec.value}\r\n        onChangeText={text => setSpec({ value: text, error: '' })}\r\n        error={!!spec.error}\r\n        errorText={spec.error}\r\n      />\r\n      <TextInput\r\n        label=\"Experience\"\r\n        returnKeyType=\"next\"\r\n        value={exp.value}\r\n        onChangeText={text => setExp({ value: text, error: '' })}\r\n        error={!!exp.error}\r\n        errorText={exp.error}\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={text => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Dropdown/>\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={_onSignUpPressed}\r\n        style={{ marginTop: 6 }}>\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.goBack('LoginScreen')}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default DocReg;"]},"metadata":{},"sourceType":"module"}