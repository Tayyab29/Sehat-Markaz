{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { Provider } from 'react-native-paper';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-paper';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { theme } from \"./core/theme\";\nimport { Dashboard, Doctor, StartScreen } from \"./User\";\nvar Tab = createMaterialBottomTabNavigator();\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Settings!\"));\n}\n\nfunction Signout(_ref) {\n  var navigation = _ref.navigation;\n\n  var handleSignOut = function handleSignOut() {\n    return _regeneratorRuntime.async(function handleSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(auth.signOut().then(navigation.navigate('LoginScreen')));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: '#F4F4F4',\n      marginLeft: 20,\n      width: 145,\n      borderRadius: 50\n    },\n    mode: \"outlined\",\n    onPress: handleSignOut\n  }, \"Signout\"));\n}\n\nvar MyTabs = function MyTabs(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Provider, {\n    theme: theme\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Dashboard\",\n    activeColor: \"#ffff\",\n    barStyle: {\n      backgroundColor: theme.colors.primary\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation,\n          route = _ref3.route;\n      return {\n        tabBarLabel: 'Dashboard',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: 26\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('NotificationsTab');\n            },\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"bell-o\",\n            size: 25,\n            color: \"red\",\n            style: {\n              marginRight: 15\n            }\n          }));\n        }\n      };\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ViewProfile\",\n    component: SettingsScreen,\n    options: {\n      tabBarLabel: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account\",\n          color: color,\n          size: 26\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Pressable, {\n          onPress: function onPress() {\n            return navigation.navigate('NotificationsTab');\n          },\n          style: function style(_ref7) {\n            var pressed = _ref7.pressed;\n            return {\n              opacity: pressed ? 0.5 : 1\n            };\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"bell-o\",\n          size: 25,\n          color: \"red\",\n          style: {\n            marginRight: 15\n          }\n        }));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"settings\",\n    component: Doctor,\n    options: {\n      tabBarLabel: 'Settings',\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var color = _ref8.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"cog\",\n          color: color,\n          size: 26\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"logout\",\n    component: StartScreen,\n    options: {\n      tabBarLabel: 'LogOut',\n      tabBarIcon: function tabBarIcon(_ref9) {\n        var color = _ref9.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"logout\",\n          color: color,\n          size: 26\n        });\n      }\n    }\n  })));\n};\n\nexport default function Navigation() {\n  return React.createElement(MyTabs, null);\n}","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat-k/src/screens/Navigation.js"],"names":["React","Provider","Button","createMaterialBottomTabNavigator","MaterialCommunityIcons","theme","Dashboard","Doctor","StartScreen","Tab","SettingsScreen","flex","justifyContent","alignItems","Signout","navigation","handleSignOut","auth","signOut","then","navigate","console","log","backgroundColor","marginLeft","width","borderRadius","MyTabs","colors","primary","route","tabBarLabel","tabBarIcon","color","headerRight","pressed","opacity","marginRight","Navigation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Provider } from 'react-native-paper';\r\nimport { Text, View } from 'react-native';\r\nimport { Button } from 'react-native-paper';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { theme } from './core/theme';\r\n\r\nimport {\r\n  Dashboard,\r\n  Doctor,\r\n  StartScreen\r\n} from './User';\r\n\r\n// import Firebase from './firebase';\r\n// const auth = Firebase.auth();\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nfunction SettingsScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Settings!</Text>\r\n    </View>\r\n  );\r\n}\r\nfunction Signout({navigation}) {\r\n    const handleSignOut = async () => {\r\n    try {\r\n      await auth.signOut().then(\r\n      navigation.navigate('LoginScreen')  );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    \r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Button style= {{    backgroundColor: '#F4F4F4',\r\n    marginLeft: 20,\r\n    width: 145,\r\n    borderRadius: 50,}} mode =\"outlined\"\r\n          onPress = {handleSignOut}>\r\n          Signout\r\n        </Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst MyTabs =({navigation})=> {\r\n \r\n  return (\r\n<Provider theme={theme}>\r\n<Tab.Navigator\r\n      initialRouteName=\"Dashboard\"\r\n      activeColor=\"#ffff\"\r\n      barStyle={{ backgroundColor: theme.colors.primary }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Dashboard\"\r\n        component={Dashboard}\r\n        options={({navigation, route}) => ({\r\n          tabBarLabel: 'Dashboard',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={26} />),\r\n            headerRight: () => (\r\n              <Pressable\r\n                  onPress={() => navigation.navigate('NotificationsTab')}\r\n                  style={({ pressed }) => ({\r\n                      opacity: pressed ? 0.5 : 1,\r\n                  })}>\r\n                  <FontAwesome\r\n                      name=\"bell-o\"\r\n                      size={25}\r\n                      color='red'\r\n                      style={{ marginRight: 15 }}\r\n                  />\r\n              </Pressable>\r\n              ),\r\n        })}\r\n      />\r\n      <Tab.Screen\r\n        name=\"ViewProfile\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"account\" color={color} size={26} />\r\n          ),\r\n          headerRight: () => (\r\n            <Pressable\r\n                onPress={() => navigation.navigate('NotificationsTab')}\r\n                style={({ pressed }) => ({\r\n                    opacity: pressed ? 0.5 : 1,\r\n                })}>\r\n                <FontAwesome\r\n                    name=\"bell-o\"\r\n                    size={25}\r\n                    color='red'\r\n                    style={{ marginRight: 15 }}\r\n                />\r\n            </Pressable>\r\n            ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"settings\"\r\n        component={Doctor}\r\n        options={{\r\n          tabBarLabel: 'Settings',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"cog\" color={color} size={26} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"logout\"\r\n        component={StartScreen}\r\n        options={{\r\n          tabBarLabel: 'LogOut',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"logout\" color={color} size={26} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <MyTabs/>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}