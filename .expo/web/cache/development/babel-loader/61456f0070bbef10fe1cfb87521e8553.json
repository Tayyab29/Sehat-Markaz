{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport { theme } from \"./core/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { passwordValidator } from \"./helpers/passwordValidator\";\nexport default function LoginScreen(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  var otherParam = route.params.otherParam;\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.navigate('Root');\n  };\n\n  return React.createElement(Background, null, React.createElement(Logo, null), React.createElement(Header, null, \"Welcome \"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\"\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true\n  }), React.createElement(View, {\n    style: styles.forgotPassword\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, null, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(otherParam);\n    }\n  }, React.createElement(Text, {\n    style: styles.link\n  }, \"Sign up\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 14\n  },\n  forgot: {\n    fontWeight: 'bold',\n    fontSize: 12,\n    color: theme.colors.primary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat-k/src/screens/Login.js"],"names":["React","useState","useEffect","Text","Background","Logo","Header","Button","TextInput","theme","useNavigation","emailValidator","passwordValidator","LoginScreen","route","value","error","email","setEmail","password","setPassword","navigation","otherParam","params","onLoginPressed","emailError","passwordError","navigate","text","styles","forgotPassword","forgot","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontWeight","fontSize","color","colors","primary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,SAASC,KAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AAIA,eAAe,SAASC,WAAT,OAAgC;AAAA,MAATC,KAAS,QAATA,KAAS;;AAC7C,kBAA0Bb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCjB,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;AACA,MAAOY,UAAP,GAAsBR,KAAK,CAACS,MAA5B,CAAOD,UAAP;;AAEA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,UAAU,GAAGd,cAAc,CAACM,KAAK,CAACF,KAAP,CAAjC;AACA,QAAMW,aAAa,GAAGd,iBAAiB,CAACO,QAAQ,CAACJ,KAAV,CAAvC;;AAGA,QAAIU,UAAU,IAAIC,aAAlB,EAAiC;AAC/BR,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,KAAK,EAAES;AAApB,SAAR;AACAL,MAAAA,WAAW,iCAAMD,QAAN;AAAgBH,QAAAA,KAAK,EAAEU;AAAvB,SAAX;AACA;AACD;;AACDL,IAAAA,UAAU,CAACM,QAAX,CAAoB,MAApB;AACD,GAXD;;AA0BA,SACE,oBAAC,UAAD,QACE,oBAAC,IAAD,OADF,EAEE,oBAAC,MAAD,mBAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEV,KAAK,CAACF,KAHf;AAIE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUV,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAEa,IAAT;AAAeZ,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;AAME,IAAA,SAAS,EAAEC,KAAK,CAACD,KANnB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAQE,IAAA,gBAAgB,EAAC,OARnB;AASE,IAAA,eAAe,EAAC,cATlB;AAUE,IAAA,YAAY,EAAC;AAVf,IAHF,EAeE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEG,QAAQ,CAACJ,KAHlB;AAIE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUR,WAAW,CAAC;AAAEL,QAAAA,KAAK,EAAEa,IAAT;AAAeZ,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAArB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACG,QAAQ,CAACH,KALpB;AAME,IAAA,SAAS,EAAEG,QAAQ,CAACH,KANtB;AAOE,IAAA,eAAe;AAPjB,IAfF,EAwBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC;AAApB,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAQT,UAAU,CAACM,QAAX,CAAoB,qBAApB,CAAR;AAAA;AADX,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE;AAApB,6BAFF,CADF,CAxBF,EA8BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEP;AAAlC,aA9BF,EAiCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACG;AAApB,KACE,oBAAC,IAAD,uCADF,EAEE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMX,UAAU,CAACM,QAAX,CAAoBL,UAApB,CAAN;AAAA;AADX,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACI;AAApB,eAFF,CAFF,CAjCF,CADF;AA2CD;AAGD,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,cAAc,EAAE;AACdM,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,UAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAN0B;AAU/BT,EAAAA,MAAM,EAAE;AACNU,IAAAA,UAAU,EAAE,MADN;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,KAAK,EAAElC,KAAK,CAACmC,MAAN,CAAaC;AAHd,GAVuB;AAe/BZ,EAAAA,IAAI,EAAE;AACJQ,IAAAA,UAAU,EAAE,MADR;AAEJE,IAAAA,KAAK,EAAElC,KAAK,CAACmC,MAAN,CAAaC;AAFhB;AAfyB,CAAlB,CAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native';\r\nimport { Text } from 'react-native-paper';\r\nimport Background from './components/Background';\r\nimport Logo from './components/Logo';\r\nimport Header from './components/Header';\r\nimport Button from './components/Button';\r\nimport TextInput from './components/TextInput';\r\nimport { theme } from './core/theme';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { emailValidator } from './helpers/emailValidator';\r\nimport { passwordValidator } from './helpers/passwordValidator';\r\n//import Firebase from \"./firebase\";\r\n//const auth = Firebase.auth();\r\n\r\nexport default function LoginScreen({ route }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n  const navigation = useNavigation();\r\n  const {otherParam}  = route.params;\r\n\r\n  const onLoginPressed = () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      return;\r\n    }\r\n    navigation.navigate('Root');\r\n  };\r\n\r\n  //   const onLoginPressed = () => {\r\n  //   try {\r\n  //     if (email != '' && password != '') {\r\n  //       auth.signInWithEmailAndPassword(email.value, password.value).\r\n  //       then(() => {navigation.navigate('Dashboard')}\r\n  //       ).catch(() => alert(\"Invalid\"))\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // };\r\n   \r\n\r\n  return (\r\n    <Background>\r\n      <Logo />\r\n      <Header>Welcome </Header>\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() =>   navigation.navigate('ResetPasswordScreen')}>\r\n          <Text style={styles.forgot}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed}>\r\n        Login\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Don’t have an account? </Text>\r\n        <TouchableOpacity \r\n          onPress={() => navigation.navigate(otherParam)}>\r\n          <Text style={styles.link}>Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 14,\r\n  },\r\n  forgot: {\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n    color: theme.colors.primary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}