{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { Provider } from 'react-native-paper';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Button } from 'react-native-paper';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { theme } from \"./core/theme\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Dashboard, NotificationsTab, StartScreen } from \"./User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings!\"\n    })\n  });\n}\n\nfunction Signout(_ref) {\n  var navigation = _ref.navigation;\n\n  var handleSignOut = function handleSignOut() {\n    return _regeneratorRuntime.async(function handleSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(auth.signOut().then(navigation.navigate('LoginScreen')));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Button, {\n      style: {\n        backgroundColor: '#F4F4F4',\n        marginLeft: 20,\n        width: 145,\n        borderRadius: 50\n      },\n      mode: \"outlined\",\n      onPress: handleSignOut,\n      children: \"Signout\"\n    })\n  });\n}\n\nvar MyTabs = function MyTabs(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Dashboard\",\n      activeColor: \"white\",\n      barStyle: {\n        backgroundColor: theme.colors.primary\n      },\n      screenOptions: {\n        tabBarActiveTintColor: \"#18b4f5\",\n        tabBarInactiveTintColor: \"white\",\n        tabBarActiveBackgroundColor: \"#ffff\",\n        tabBarInactiveBackgroundColor: '#18b4f5'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Dashboard\",\n        component: Dashboard,\n        options: function options(_ref3) {\n          var navigation = _ref3.navigation,\n              route = _ref3.route;\n          return {\n            title: 'Sehat Markaz',\n            tabBarLabel: 'Dashboard',\n            headerTitleAlign: 'center',\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home\",\n                color: color,\n                size: 26\n              });\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: NotificationsTab,\n        options: {\n          tabBarLabel: 'Profile',\n          headerTitleAlign: 'center',\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color;\n            return _jsx(FontAwesome, {\n              name: \"user-o\",\n              size: 25,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Notiications\",\n        component: NotificationsTab,\n        options: {\n          tabBarLabel: 'Notiications',\n          headerTitleAlign: 'center',\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color;\n            return _jsx(FontAwesome, {\n              name: \"bell-o\",\n              size: 25,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Logout\",\n        component: Signout,\n        options: {\n          tabBarLabel: 'LogOut',\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"logout\",\n              color: color,\n              size: 26\n            });\n          }\n        }\n      })]\n    })\n  });\n};\n\nexport default function Navigation() {\n  return _jsx(MyTabs, {});\n}","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/Navigation.js"],"names":["React","Provider","Button","MaterialCommunityIcons","theme","FontAwesome","createBottomTabNavigator","Dashboard","NotificationsTab","StartScreen","Tab","SettingsScreen","flex","justifyContent","alignItems","Signout","navigation","handleSignOut","auth","signOut","then","navigate","console","log","backgroundColor","marginLeft","width","borderRadius","MyTabs","colors","primary","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","route","title","tabBarLabel","headerTitleAlign","tabBarIcon","color","Navigation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Provider } from 'react-native-paper';\r\nimport { Text, View,Pressable } from 'react-native';\r\nimport { Button } from 'react-native-paper';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { theme } from './core/theme';\r\nimport {FontAwesome} from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport {\r\n  Dashboard,\r\n  NotificationsTab,\r\n  StartScreen\r\n} from './User';\r\n\r\n\r\n// import Firebase from './firebase';\r\n// const auth = Firebase.auth();\r\n\r\nconst Tab = createBottomTabNavigator();\r\nfunction SettingsScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Settings!</Text>\r\n    </View>\r\n  );\r\n}\r\nfunction Signout({navigation}) {\r\n    const handleSignOut = async () => {\r\n    try {\r\n      await auth.signOut().then(\r\n      navigation.navigate('LoginScreen')  );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    \r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Button style= {{    backgroundColor: '#F4F4F4',\r\n    marginLeft: 20,\r\n    width: 145,\r\n    borderRadius: 50,}} mode =\"outlined\"\r\n          onPress = {handleSignOut}>\r\n          Signout\r\n        </Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst MyTabs =({navigation})=> {\r\n \r\n  return (\r\n<Provider theme={theme}>\r\n<Tab.Navigator\r\n      initialRouteName=\"Dashboard\"\r\n      activeColor=\"white\"\r\n      barStyle={{ backgroundColor: theme.colors.primary }}\r\n      screenOptions={{\r\n        tabBarActiveTintColor: \"#18b4f5\", \r\n        tabBarInactiveTintColor: \"white\", \r\n        tabBarActiveBackgroundColor: \"#ffff\", \r\n        tabBarInactiveBackgroundColor: '#18b4f5'\r\n    }}>\r\n      <Tab.Screen\r\n        name=\"Dashboard\"\r\n        component={Dashboard}\r\n        options={({navigation, route}) => ({\r\n          title: 'Sehat Markaz',\r\n          tabBarLabel: 'Dashboard',\r\n          headerTitleAlign: 'center',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={26} />),\r\n            // headerRight: () => (\r\n            //   <Pressable\r\n            //       onPress={() => navigation.navigate('NotificationsTab')}\r\n            //       style={({ pressed }) => ({\r\n            //           opacity: pressed ? 0.5 : 1,\r\n            //       })}>\r\n            //       <FontAwesome\r\n            //           name=\"bell-o\"\r\n            //           size={25}\r\n            //           color='black'\r\n            //           style={{ marginRight: 20 }}\r\n            //       />\r\n            //   </Pressable>\r\n            //   ),\r\n        })}\r\n      />\r\n      {/* <Tab.Screen\r\n        name=\"ViewProfile\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          headerTitleAlign: 'center',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"account\" color={color} size={26} />\r\n          ),\r\n          headerRight: () => (\r\n            <Pressable\r\n                onPress={() => navigation.navigate('NotificationsTab')}\r\n                style={({ pressed }) => ({\r\n                    opacity: pressed ? 0.5 : 1,\r\n                })}>\r\n                <FontAwesome\r\n                    name=\"bell-o\"\r\n                    size={25}\r\n                    color='black'\r\n                    style={{ marginRight: 20 }}\r\n                />\r\n            </Pressable>\r\n            ),\r\n        }}\r\n      /> */}\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={NotificationsTab}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          headerTitleAlign: 'center',\r\n          tabBarIcon: ({ color }) => (\r\n            <FontAwesome name=\"user-o\" size={25} color= {color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Notiications\"\r\n        component={NotificationsTab}\r\n        options={{\r\n          tabBarLabel: 'Notiications',\r\n          headerTitleAlign: 'center',\r\n          tabBarIcon: ({ color }) => (\r\n            <FontAwesome name=\"bell-o\" size={25} color= {color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Logout\"\r\n        component={Signout}\r\n        options={{\r\n          tabBarLabel: 'LogOut', \r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"logout\" color={color} size={26} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <MyTabs/>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}