{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Agenda } from 'react-native-calendars';\nimport { Card, Avatar } from 'react-native-paper';\nimport users from \"./DoctorData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar Schedule = function Schedule() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var loadItems = function loadItems(day) {\n    setTimeout(function () {\n      for (var i = -15; i < 85; i++) {\n        var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        var strTime = timeToString(time);\n\n        if (!items[strTime]) {\n          items[strTime] = [];\n          var numItems = Math.floor(Math.random() * 3 + 1);\n\n          for (var j = 0; j < numItems; j++) {\n            items[strTime].push({\n              name: 'Item for ' + strTime + ' #' + j,\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n          }\n        }\n      }\n\n      var newItems = {};\n      Object.keys(items).forEach(function (key) {\n        newItems[key] = items[key];\n      });\n      setItems(newItems);\n    }, 1000);\n  };\n\n  var renderItem = function renderItem(item) {\n    return _jsx(TouchableOpacity, {\n      style: {\n        marginRight: 10,\n        marginTop: 20\n      },\n      children: _jsx(Card, {\n        children: _jsx(Card.Content, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              children: item.name\n            }), _jsx(Avatar.Text, {\n              label: \"J\"\n            })]\n          })\n        })\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {}), _jsxs(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        return navigation.navigate('DocProfile');\n      },\n      children: [_jsx(View, {\n        style: styles.cardImgWrapper,\n        children: _jsx(Avatar.Image, {\n          source: require(\"../asset/image.jpg\"),\n          style: styles.cardImg,\n          size: 100\n        })\n      }), _jsxs(View, {\n        style: styles.cardInfo,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Muhammad Tayyab Khazain\"\n        }), _jsxs(Text, {\n          style: styles.cardDetails,\n          children: [\"Specialty: Surgeon\", \"\\n\", \"Experince: 10Years\"]\n        })]\n      })]\n    }), _jsx(Text, {\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        padding: 4,\n        marginLeft: 14\n      },\n      children: \"Pick a day\"\n    }), _jsx(Agenda, {\n      items: items,\n      loadItemsForMonth: loadItems,\n      selected: '2022-04-26',\n      renderItem: renderItem\n    })]\n  });\n};\n\nexport default Schedule;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  itemtxt: {\n    fontSize: 24,\n    alignItems: 'center'\n  },\n  cardsWrapper: {\n    width: '90%',\n    alignSelf: 'center'\n  },\n  card: {\n    height: 100,\n    marginVertical: 10,\n    flexDirection: 'row',\n    shadowColor: '#999',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 5,\n    paddingLeft: 10\n  },\n  cardImgWrapper: {\n    flex: 1\n  },\n  cardImg: {\n    height: '100%',\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: \"transparent\",\n    borderRadius: 8,\n    borderBottomRightRadius: 0,\n    borderTopRightRadius: 0\n  },\n  cardInfo: {\n    flex: 2,\n    padding: 10,\n    borderColor: '#ccc',\n    borderWidth: 0.6,\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 18,\n    borderBottomRightRadius: 8,\n    borderTopRightRadius: 8,\n    backgroundColor: '#fff'\n  },\n  cardTitle: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: 3\n  },\n  cardDetails: {\n    fontSize: 15,\n    color: '#444'\n  }\n});","map":{"version":3,"sources":["C:/Users/AERO/Downloads/Compressed/fyp-esehat - Int/src/screens/Doctor/Schedule.js"],"names":["React","useState","Agenda","Card","Avatar","users","timeToString","time","date","Date","toISOString","split","Schedule","items","setItems","loadItems","day","setTimeout","i","timestamp","strTime","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","renderItem","item","marginRight","marginTop","flexDirection","justifyContent","alignItems","flex","styles","card","navigation","navigate","cardImgWrapper","require","cardImg","cardInfo","cardTitle","cardDetails","fontSize","fontWeight","padding","marginLeft","StyleSheet","create","container","itemtxt","cardsWrapper","width","alignSelf","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingLeft","backgroundColor","borderRadius","borderBottomRightRadius","borderTopRightRadius","borderColor","borderWidth","borderLeftWidth","borderTopLeftRadius","marginBottom","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAEA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,oBAA3B;AACA,OAAOC,KAAP;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAb;AACA,SAAOC,IAAI,CAACE,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACD,CAHD;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzBC,IAAAA,UAAU,CAAC,YAAM;AACf,WAAK,IAAIC,CAAC,GAAG,CAAC,EAAd,EAAkBA,CAAC,GAAG,EAAtB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,YAAMX,IAAI,GAAGS,GAAG,CAACG,SAAJ,GAAgBD,CAAC,GAAG,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAhD;AACA,YAAME,OAAO,GAAGd,YAAY,CAACC,IAAD,CAA5B;;AACA,YAAI,CAACM,KAAK,CAACO,OAAD,CAAV,EAAqB;AACnBP,UAAAA,KAAK,CAACO,OAAD,CAAL,GAAiB,EAAjB;AACA,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAjB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AACjCZ,YAAAA,KAAK,CAACO,OAAD,CAAL,CAAeM,IAAf,CAAoB;AAClBC,cAAAA,IAAI,EAAE,cAAcP,OAAd,GAAwB,IAAxB,GAA+BK,CADnB;AAElBG,cAAAA,MAAM,EAAEN,IAAI,CAACO,GAAL,CAAS,EAAT,EAAaP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAFU,aAApB;AAID;AACF;AACF;;AACD,UAAMM,QAAQ,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYnB,KAAZ,EAAmBoB,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClCJ,QAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgBrB,KAAK,CAACqB,GAAD,CAArB;AACD,OAFD;AAGApB,MAAAA,QAAQ,CAACgB,QAAD,CAAR;AACD,KApBS,EAoBP,IApBO,CAAV;AAqBD,GAtBD;;AAwBA,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,WAEE,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE,EAAd;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAzB;AAAA,gBACE,KAAC,IAAD;AAAA,kBACE,KAAC,IAAD,CAAM,OAAN;AAAA,oBACE,MAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,aAAa,EAAE,KADV;AAELC,cAAAA,cAAc,EAAE,eAFX;AAGLC,cAAAA,UAAU,EAAE;AAHP,aADT;AAAA,uBAME,KAAC,IAAD;AAAA,wBAAOL,IAAI,CAACT;AAAZ,cANF,EAOE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC;AAAnB,cAPF;AAAA;AADF;AADF;AADF,MAFF;AAkBD,GAnBD;;AAqBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA,eACE,KAAC,SAAD,KADF,EAEE,MAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,IAAhC;AACE,MAAA,OAAO,EAAI;AAAA,eAAKC,UAAU,CAACC,QAAX,CAAoB,YAApB,CAAL;AAAA,OADb;AAAA,iBAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA,kBACA,KAAC,MAAD,CAAQ,KAAR;AACE,UAAA,MAAM,EAAEC,OAAO,sBADjB;AAEE,UAAA,KAAK,EAAEL,MAAM,CAACM,OAFhB;AAGI,UAAA,IAAI,EAAG;AAHX;AADA,QAFJ,EASI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACQ,SAApB;AAAA;AAAA,UADF,EAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA,2CACqB,IADrB;AAAA,UAFF;AAAA,QATJ;AAAA,MAFF,EAoBE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,EAAV;AAAcC,QAAAA,UAAU,EAAC,MAAzB;AAAiCC,QAAAA,OAAO,EAAC,CAAzC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAb;AAAA;AAAA,MApBF,EAsBE,KAAC,MAAD;AACE,MAAA,KAAK,EAAE3C,KADT;AAEE,MAAA,iBAAiB,EAAEE,SAFrB;AAGE,MAAA,QAAQ,EAAE,YAHZ;AAIE,MAAA,UAAU,EAAEoB;AAJd,MAtBF;AAAA,IADF;AA+BD,CA/ED;;AAiFA,eAAevB,QAAf;AAEA,IAAM+B,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTjB,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BkB,EAAAA,OAAO,EAAC;AACJP,IAAAA,QAAQ,EAAC,EADL;AAEJZ,IAAAA,UAAU,EAAE;AAFR,GAJuB;AAQ/BoB,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,SAAS,EAAE;AAFC,GARiB;AAY/BnB,EAAAA,IAAI,EAAE;AACJhB,IAAAA,MAAM,EAAE,GADJ;AAEJoC,IAAAA,cAAc,EAAE,EAFZ;AAGJzB,IAAAA,aAAa,EAAE,KAHX;AAIJ0B,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,YAAY,EAAE;AAACJ,MAAAA,KAAK,EAAE,CAAR;AAAWlC,MAAAA,MAAM,EAAE;AAAnB,KALV;AAMJuC,IAAAA,aAAa,EAAE,GANX;AAOJC,IAAAA,YAAY,EAAE,CAPV;AAQJC,IAAAA,SAAS,EAAE,CARP;AASJC,IAAAA,WAAW,EAAC;AATR,GAZyB;AAuB/BvB,EAAAA,cAAc,EAAE;AACdL,IAAAA,IAAI,EAAE;AADQ,GAvBe;AA0B/BO,EAAAA,OAAO,EAAE;AACPrB,IAAAA,MAAM,EAAE,MADD;AAEPkC,IAAAA,KAAK,EAAE,MAFA;AAGPC,IAAAA,SAAS,EAAE,QAHJ;AAIPQ,IAAAA,eAAe,EAAE,aAJV;AAKPC,IAAAA,YAAY,EAAE,CALP;AAMPC,IAAAA,uBAAuB,EAAE,CANlB;AAOPC,IAAAA,oBAAoB,EAAE;AAPf,GA1BsB;AAmC/BxB,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAE,CADE;AAERa,IAAAA,OAAO,EAAE,EAFD;AAGRoB,IAAAA,WAAW,EAAE,MAHL;AAIRC,IAAAA,WAAW,EAAE,GAJL;AAKRC,IAAAA,eAAe,EAAE,CALT;AAMRC,IAAAA,mBAAmB,EAAC,EANZ;AAORL,IAAAA,uBAAuB,EAAE,CAPjB;AAQRC,IAAAA,oBAAoB,EAAE,CARd;AASRH,IAAAA,eAAe,EAAE;AATT,GAnCqB;AA8C/BpB,EAAAA,SAAS,EAAE;AACTG,IAAAA,UAAU,EAAE,MADH;AAETD,IAAAA,QAAQ,EAAE,EAFD;AAGT0B,IAAAA,YAAY,EAAE;AAHL,GA9CoB;AAmD/B3B,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,EADC;AAEX2B,IAAAA,KAAK,EAAE;AAFI;AAnDkB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, TouchableOpacity, Text, StatusBar, FlatList, StyleSheet} from 'react-native';\r\nimport {Agenda} from 'react-native-calendars';\r\nimport {Card, Avatar} from 'react-native-paper';\r\nimport users from \"./DoctorData\";\r\n//import Typography from '../components/Typography';\r\n\r\nconst timeToString = (time) => {\r\n  const date = new Date(time);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst Schedule = () => {\r\n  const [items, setItems] = useState({});\r\n\r\n  const loadItems = (day) => {\r\n    setTimeout(() => {\r\n      for (let i = -15; i < 85; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = timeToString(time);\r\n        if (!items[strTime]) {\r\n          items[strTime] = [];\r\n          const numItems = Math.floor(Math.random() * 3 + 1);\r\n          for (let j = 0; j < numItems; j++) {\r\n            items[strTime].push({\r\n              name: 'Item for ' + strTime + ' #' + j,\r\n              height: Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      Object.keys(items).forEach((key) => {\r\n        newItems[key] = items[key];\r\n      });\r\n      setItems(newItems);\r\n    }, 1000);\r\n  };\r\n\r\n  const renderItem = (item) => {\r\n    return (\r\n      \r\n      <TouchableOpacity style={{marginRight: 10, marginTop: 20}}>\r\n        <Card>\r\n          <Card.Content>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n              <Text>{item.name}</Text>\r\n              <Avatar.Text label=\"J\" />\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <StatusBar></StatusBar>\r\n      <TouchableOpacity style={styles.card} \r\n        onPress = {()=>(navigation.navigate('DocProfile'))}>\r\n          <View style={styles.cardImgWrapper}>\r\n          <Avatar.Image\r\n            source={require('../asset/image.jpg')}\r\n            style={styles.cardImg}\r\n              size= {100}\r\n            />\r\n          </View>\r\n          <View style={styles.cardInfo}>\r\n            <Text style={styles.cardTitle}>Muhammad Tayyab Khazain</Text>\r\n            <Text style={styles.cardDetails}>\r\n              Specialty: Surgeon{\"\\n\"}\r\n              Experince: 10Years\r\n            </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n\r\n      <Text style={{fontSize:16, fontWeight:'bold', padding:4, marginLeft: 14}}>\r\n        Pick a day</Text>\r\n      <Agenda\r\n        items={items}\r\n        loadItemsForMonth={loadItems}\r\n        selected={'2022-04-26'}\r\n        renderItem={renderItem}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  itemtxt:{\r\n      fontSize:24,\r\n      alignItems: 'center'\r\n  },\r\n  cardsWrapper: {\r\n    width: '90%',\r\n    alignSelf: 'center',\r\n  },\r\n  card: {\r\n    height: 100,\r\n    marginVertical: 10,\r\n    flexDirection: 'row',\r\n    shadowColor: '#999',\r\n    shadowOffset: {width: 0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 2,\r\n    elevation: 5,\r\n    paddingLeft:10\r\n  },\r\n  cardImgWrapper: {\r\n    flex: 1,\r\n  },\r\n  cardImg: {\r\n    height: '100%',\r\n    width: '100%',\r\n    alignSelf: 'center',\r\n    backgroundColor: \"transparent\",\r\n    borderRadius: 8,\r\n    borderBottomRightRadius: 0,\r\n    borderTopRightRadius: 0,\r\n  },\r\n  cardInfo: {\r\n    flex: 2,\r\n    padding: 10,\r\n    borderColor: '#ccc',\r\n    borderWidth: 0.6,\r\n    borderLeftWidth: 0,\r\n    borderTopLeftRadius:18,\r\n    borderBottomRightRadius: 8,\r\n    borderTopRightRadius: 8,\r\n    backgroundColor: '#fff',\r\n  },\r\n  cardTitle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    marginBottom: 3,\r\n  },\r\n  cardDetails: {\r\n    fontSize: 15,\r\n    color: '#444',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}